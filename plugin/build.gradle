group 'com.karumi.hagu'
version '0.1.0'

buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.karumi.kotlinsnapshot:plugin:2.1.1"
    }
}

apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'com.karumi.kotlin-snapshot'

repositories {
    mavenCentral()
}

configurations {
    ktlint
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation gradleApi()
    implementation localGroovy()
    ktlint "com.pinterest:ktlint:0.34.2"
    implementation group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "--color", "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

apply plugin: 'maven'
apply plugin: 'signing'

install {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}

sourceSets {
    test {
        output.resourcesDir = "build/classes/test/resources"
        groovy {
            srcDirs = ['test/groovy']
        }
    }
    main {
        groovy {
            srcDirs = ['src/main/groovy']
        }
    }
}

